from collections import namedtuple


NUM_FEATURES_GEE = 69

_Column = namedtuple('_Column', ['name', 'data_type', 'column_type', 'should_scale'])

_RAW_VNET_COLUMNS = [
    ('IN_BYTES', 'DoubleType', 'feature_standard', True),
    ('IN_PKTS', 'DoubleType', 'feature_standard', True),
    ('OUT_BYTES', 'DoubleType', 'feature_standard', True),
    ('OUT_PKTS', 'DoubleType', 'feature_standard', True),
    ('MIN_IP_PKT_LEN', 'DoubleType', 'feature_standard', True),
    ('MAX_IP_PKT_LEN', 'DoubleType', 'feature_standard', True),
    ('MIN_TTL', 'DoubleType', 'feature_standard', True),
    ('MAX_TTL', 'DoubleType', 'feature_standard', True),
    ('SRC_FRAGMENTS', 'DoubleType', 'feature_standard', True),
    ('DST_FRAGMENTS', 'DoubleType', 'feature_standard', True),
    ('SRC_TO_DST_AVG_THROUGHPUT', 'DoubleType', 'feature_standard', True),
    ('DST_TO_SRC_AVG_THROUGHPUT', 'DoubleType', 'feature_standard', True),
    ('NUM_PKTS_UP_TO_128_BYTES', 'DoubleType', 'feature_standard', True),
    ('NUM_PKTS_128_TO_256_BYTES', 'DoubleType', 'feature_standard', True),
    ('NUM_PKTS_256_TO_512_BYTES', 'DoubleType', 'feature_standard', True),
    ('NUM_PKTS_512_TO_1024_BYTES', 'DoubleType', 'feature_standard', True),
    ('NUM_PKTS_1024_TO_1514_BYTES', 'DoubleType', 'feature_standard', True),
    ('NUM_PKTS_OVER_1514_BYTES', 'DoubleType', 'feature_standard', True),
    ('LONGEST_FLOW_PKT', 'DoubleType', 'feature_standard', True),
    ('SHORTEST_FLOW_PKT', 'DoubleType', 'feature_standard', True),
    ('RETRANSMITTED_IN_PKTS', 'DoubleType', 'feature_standard', True),
    ('RETRANSMITTED_OUT_PKTS', 'DoubleType', 'feature_standard', True),
    ('OOORDER_IN_PKTS', 'DoubleType', 'feature_standard', True),
    ('OOORDER_OUT_PKTS', 'DoubleType', 'feature_standard', True),
    ('DURATION_IN', 'DoubleType', 'feature_standard', True),
    ('DURATION_OUT', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_MIN_IN', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_MAX_IN', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_MSS_IN', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_SCALE_IN', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_MIN_OUT', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_MAX_OUT', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_MSS_OUT', 'DoubleType', 'feature_standard', True),
    ('TCP_WIN_SCALE_OUT', 'DoubleType', 'feature_standard', True),
    ('SRC_TO_DST_IAT_MIN', 'DoubleType', 'feature_standard', True),
    ('SRC_TO_DST_IAT_MAX', 'DoubleType', 'feature_standard', True),
    ('SRC_TO_DST_IAT_AVG', 'DoubleType', 'feature_standard', True),
    ('SRC_TO_DST_IAT_STDDEV', 'DoubleType', 'feature_standard', True),
    ('DST_TO_SRC_IAT_MIN', 'DoubleType', 'feature_standard', True),
    ('DST_TO_SRC_IAT_MAX', 'DoubleType', 'feature_standard', True),
    ('DST_TO_SRC_IAT_AVG', 'DoubleType', 'feature_standard', True),
    ('DST_TO_SRC_IAT_STDDEV', 'DoubleType', 'feature_standard', True),
    ('Label', 'StringType', 'label', False),
    ('SRC_DENY', 'BooleanType', 'other', False),
    ('DST_DENY', 'BooleanType', 'other', False),
    ('flows_total', 'DoubleType', 'feature_windowing', True),
    ('flows_concurrent_max', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_avg', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_std', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_min', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_max', 'DoubleType', 'feature_windowing', True),
    ('dur_total', 'DoubleType', 'feature_windowing', True),
    ('dur_avg', 'DoubleType', 'feature_windowing', True),
    ('dur_std', 'DoubleType', 'feature_windowing', True),
    ('pkt_total', 'DoubleType', 'feature_windowing', True),
    ('ppf_avg', 'DoubleType', 'feature_windowing', True),
    ('ppf_std', 'DoubleType', 'feature_windowing', True),
    ('bytes_total', 'DoubleType', 'feature_windowing', True),
    ('bpf_avg', 'DoubleType', 'feature_windowing', True),
    ('bpf_std', 'DoubleType', 'feature_windowing', True),
    ('bpp_avg', 'DoubleType', 'feature_windowing', True),
    ('bpp_std', 'DoubleType', 'feature_windowing', True),
    ('bps_avg', 'DoubleType', 'feature_windowing', True),
    ('bps_std', 'DoubleType', 'feature_windowing', True),
    ('pps_avg', 'DoubleType', 'feature_windowing', True),
    ('pps_std', 'DoubleType', 'feature_windowing', True),
    ('port_src_uniq_cnt', 'DoubleType', 'feature_windowing', True),
    ('port_src_entropy', 'DoubleType', 'feature_windowing', True),
    ('proto_all_or', 'DoubleType', 'feature_windowing', True),
    ('flag_syn_ratio', 'DoubleType', 'feature_windowing', True),
    ('flag_ack_ratio', 'DoubleType', 'feature_windowing', True),
    ('flag_fin_ratio', 'DoubleType', 'feature_windowing', True),
    ('ip_dst_uniq', 'DoubleType', 'feature_windowing', True),
    ('hdr_payload_ratio_avg', 'DoubleType', 'feature_windowing', True),
    ('ttl_std', 'DoubleType', 'feature_windowing', True),
    ('window_active_ratio', 'DoubleType', 'feature_windowing', True),
    ('flows_total_std', 'DoubleType', 'feature_windowing', True),
    ('flows_concurrent_max_std', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_avg_std', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_std_std', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_min_std', 'DoubleType', 'feature_windowing', True),
    ('flows_itimes_max_std', 'DoubleType', 'feature_windowing', True),
    ('dur_total_std', 'DoubleType', 'feature_windowing', True),
    ('dur_avg_std', 'DoubleType', 'feature_windowing', True),
    ('dur_std_std', 'DoubleType', 'feature_windowing', True),
    ('pkt_total_std', 'DoubleType', 'feature_windowing', True),
    ('ppf_avg_std', 'DoubleType', 'feature_windowing', True),
    ('ppf_std_std', 'DoubleType', 'feature_windowing', True),
    ('bytes_total_std', 'DoubleType', 'feature_windowing', True),
    ('bpf_avg_std', 'DoubleType', 'feature_windowing', True),
    ('bpf_std_std', 'DoubleType', 'feature_windowing', True),
    ('bps_avg_std', 'DoubleType', 'feature_windowing', True),
    ('bps_std_std', 'DoubleType', 'feature_windowing', True),
    ('bpp_avg_std', 'DoubleType', 'feature_windowing', True),
    ('bpp_std_std', 'DoubleType', 'feature_windowing', True),
    ('port_src_uniq_cnt_std', 'DoubleType', 'feature_windowing', True),
    ('port_src_entropy_std', 'DoubleType', 'feature_windowing', True),
    ('flag_syn_ratio_std', 'DoubleType', 'feature_windowing', True),
    ('flag_ack_ratio_std', 'DoubleType', 'feature_windowing', True),
    ('flag_fin_ratio_std', 'DoubleType', 'feature_windowing', True),
    ('ip_dst_uniq_std', 'DoubleType', 'feature_windowing', True),
    ('hdr_payload_ratio_avg_std', 'DoubleType', 'feature_windowing', True),
    ('ttl_std_std', 'DoubleType', 'feature_windowing', True),
    ('IP_SRC', 'StringType', 'other', False),
    ('IP_DST', 'StringType', 'other', False),
    ('IN_BPS', 'DoubleType', 'feature_standard', True),
    ('IN_BPP', 'DoubleType', 'feature_standard', True),
    ('IN_PPS', 'DoubleType', 'feature_standard', True),
    ('OUT_BPS', 'DoubleType', 'feature_standard', True),
    ('OUT_BPP', 'DoubleType', 'feature_standard', True),
    ('OUT_PPS', 'DoubleType', 'feature_standard', True),
    ('FLAG_FIN', 'ByteType', 'feature_standard', False),
    ('FLAG_SYN', 'ByteType', 'feature_standard', False),
    ('FLAG_RST', 'ByteType', 'feature_standard', False),
    ('FLAG_PSH', 'ByteType', 'feature_standard', False),
    ('FLAG_ACK', 'ByteType', 'feature_standard', False),
    ('FLAG_URG', 'ByteType', 'feature_standard', False),
    ('FLAG_ECE', 'ByteType', 'feature_standard', False),
    ('FLAG_CWR', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_FIN', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_SYN', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_RST', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_PSH', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_ACK', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_URG', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_ECE', 'ByteType', 'feature_standard', False),
    ('CLIENT_FLAG_CWR', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_FIN', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_SYN', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_RST', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_PSH', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_ACK', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_URG', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_ECE', 'ByteType', 'feature_standard', False),
    ('SERVER_FLAG_CWR', 'ByteType', 'feature_standard', False),
    ('PROTOCOL_ICMP', 'ByteType', 'feature_standard', False),
    ('PROTOCOL_TCP', 'ByteType', 'feature_standard', False),
    ('PROTOCOL_UDP', 'ByteType', 'feature_standard', False),
    ('PROTOCOL_GRE', 'ByteType', 'feature_standard', False),
    ('PROTOCOL_ESP', 'ByteType', 'feature_standard', False),
    ('PROTOCOL_ICMP6', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_OTHER', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_NOPORT', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_WEB_NOENC', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_TLS', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_DNS', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_EMAIL', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_VPN', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_DATA', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_SHELL', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_PLAYSTATION', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_CHAT', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_QUERY', 'ByteType', 'feature_standard', False),
    ('L4_SRC_PORT_DYNAMIC', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_OTHER', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_NOPORT', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_WEB_NOENC', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_TLS', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_DNS', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_EMAIL', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_VPN', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_DATA', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_SHELL', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_PLAYSTATION', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_CHAT', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_QUERY', 'ByteType', 'feature_standard', False),
    ('L4_DST_PORT_DYNAMIC', 'ByteType', 'feature_standard', False),
    ('ICMP_TYPE_OTHER', 'ByteType', 'feature_standard', False),
    ('ICMP_TYPE_ECHO_REPLY', 'ByteType', 'feature_standard', False),
    ('ICMP_TYPE_DEST_UNREACHABLE', 'ByteType', 'feature_standard', False),
    ('ICMP_TYPE_REDIRECT', 'ByteType', 'feature_standard', False),
    ('ICMP_TYPE_ECHO_REQUEST', 'ByteType', 'feature_standard', False),
    ('ICMP_TYPE_TIME_EXCEEDED', 'ByteType', 'feature_standard', False),
]

VNET_COLUMNS = [_Column(*raw_column) for raw_column in _RAW_VNET_COLUMNS]
